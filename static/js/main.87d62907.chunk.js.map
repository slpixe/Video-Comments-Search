{"version":3,"sources":["components/youtubeList/YoutubeList.js","history.js","VideoCommentsSearch.js","App.js","registerServiceWorker.js","index.js"],"names":["YoutubeList","list","props","items","renderItems","map","item","className","snippet","topLevelComment","textOriginal","id","style","height","this","Component","history","createBrowserHistory","urlPropsQueryConfig","videoId","type","UrlQueryParamTypes","string","queryParam","query","App","updateVideoId","event","target","value","onChangeVideoId","updateSearchTerm","queryString","onChangeQuery","performSearch","nextPage","preventDefault","searchObj","part","key","searchTerms","maxResults","pageToken","state","nextPageToken","fetch","stringify","then","results","json","data","setState","searchResultItems","pageInfo","listen","forceUpdate","length","pageNumber","search","classes","noResults","root","header","onSubmit","TextField","searchBox","label","helperText","required","onChange","autoFocus","Button","searchButton","variant","color","searchResultsList","renderResults","addUrlProps","withStyles","display","flexDirection","width","backgroundColor","padding","boxSizing","justifyContent","alignItems","overflow","background","VideoCommentsSearch","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","configureUrlQuery","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.87d62907.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass YoutubeList extends Component {\n\n  list = this.props.items;\n\n  renderItems = () => {\n    return this.props.items.map(item => {\n      return (\n        <div key={item.id} className={'searchItem'}>\n          {item.snippet.topLevelComment.snippet.textOriginal}\n        </div>\n      )\n    })\n  }\n\n  render () {\n    return (\n      <div style={{height: '100%'}}>\n        {this.renderItems()}\n      </div>\n    )\n  }\n}\n\nexport default YoutubeList;","import {createBrowserHistory} from 'history'\n\nconst history = createBrowserHistory();\n\nexport default history","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { Button, TextField, FormControl } from \"@material-ui/core\";\nimport queryString from \"qs\";\nimport YoutubeList from \"./components/youtubeList/YoutubeList\";\nimport { addUrlProps, UrlQueryParamTypes } from \"react-url-query\";\nimport history from \"./history\";\n\nconst styles = {\n  root: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  header: {\n    width: \"100%\",\n    backgroundColor: \"white\",\n    padding: 20,\n    boxSizing: \"border-box\",\n  },\n  noResults: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  searchButton: {},\n  searchResultsList: {\n    overflow: \"auto\",\n    height: \"100%\",\n    background:\n      \"url(http://cdn.backgroundhost.com/backgrounds/subtlepatterns/hexellence.png)\",\n  },\n};\n\nconst youtubeApi = \"https://www.googleapis.com/youtube/v3\";\n\nconst urlPropsQueryConfig = {\n  videoId: { type: UrlQueryParamTypes.string, queryParam: \"video\" },\n  query: { type: UrlQueryParamTypes.string, queryParam: \"query\" },\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchResultItems: []\n    };\n  }\n\n  componentDidMount() {\n    history.listen(() => this.forceUpdate());\n  }\n\n  updateVideoId = (event) => {\n    const videoId = event.target.value;\n    this.props.onChangeVideoId(videoId);\n  };\n\n  updateSearchTerm = (event) => {\n    const queryString = event.target.value;\n    this.props.onChangeQuery(queryString);\n  };\n\n  performSearch = (event, nextPage) => {\n    event.preventDefault();\n    if (!this.props.videoId) return false;\n\n    let searchObj = {\n      part: \"snippet\",\n      videoId: this.props.videoId,\n      key: \"AIzaSyC1gZmsaoi4eTBAOOZ--8c4qKB1ZsSobQ0\",\n      searchTerms: this.props.query ? this.props.query : null,\n      maxResults: 30,\n      pageToken:\n        this.state.nextPageToken && nextPage ? this.state.nextPageToken : null,\n    };\n\n    fetch(`${youtubeApi}/commentThreads?${queryString.stringify(searchObj)}`)\n      .then((results) => {\n        return results.json();\n      })\n      .then((data) => {\n\n        // if(!data.items) {\n        //   this.setState({\n        //     noResults: true\n        //   });\n        // }\n\n        this.setState({\n          searchResultItems: [...data.items],\n          nextPageToken: data.nextPageToken,\n          pageInfo: data.pageInfo\n        });\n      });\n  };\n\n  renderResults() {\n    if (\n      !this.state.searchResultItems ||\n      this.state.searchResultItems.length === 0\n    ) {\n      return (\n        <div className={this.props.classes.noResults}>\n          No Results found\n        </div>\n      )\n    }\n\n    return (\n      <div style={{ height: \"100%\" }}>\n        <YoutubeList\n          items={this.state.searchResultItems}\n          pageNumber={this.state.pageInfo}\n          search={this.performSearch}\n        />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className={this.props.classes.root}>\n        <div className={this.props.classes.header}>\n          <form onSubmit={this.performSearch}>\n            <TextField\n              className={this.props.classes.searchBox}\n              type={\"text\"}\n              label={\"Youtube video ID\"}\n              helperText={\"e.g. kJQP7kiw5Fk\"}\n              value={this.props.videoId}\n              required={true}\n              onChange={(event) => this.updateVideoId(event)}\n              autoFocus\n            />\n            <TextField\n              className={this.props.classes.searchBox}\n              type={\"search\"}\n              label={\"Search term\"}\n              helperText={\"e.g. song\"}\n              value={this.props.query || \"\"}\n              required={false}\n              onChange={(event) => this.updateSearchTerm(event)}\n            />\n            <Button\n              className={this.props.classes.searchButton}\n              variant=\"outlined\"\n              color=\"primary\"\n              // onClick={this.performSearch}\n              type=\"submit\"\n            >\n              Search\n            </Button>\n          </form>\n        </div>\n        <div className={this.props.classes.searchResultsList}>\n          {this.renderResults()}\n        </div>\n      </div>\n    );\n  }\n}\n\n// export default App;\nexport default addUrlProps({ urlPropsQueryConfig })(withStyles(styles)(App));\n","import React, { Component } from 'react';\nimport VideoCommentsSearch from './VideoCommentsSearch';\nimport history from './history';\n\nclass App extends Component {\n  componentDidMount() {\n    // force an update if the URL changes\n    history.listen(() => this.forceUpdate());\n  }\n\n  render() {\n    return (\n      <VideoCommentsSearch />\n    );\n  }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport history from './history'\nimport { configureUrlQuery } from 'react-url-query';\n\nconfigureUrlQuery({ history });\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}